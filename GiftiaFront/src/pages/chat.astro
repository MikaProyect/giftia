---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Chat">

    <script
        type="module"
        src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
    ></script>

    <script
        nomodule
        src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"
    ></script>

    <div class="cont-com"> <!--Contenedor completo para el fondo-->

        <div class="izq"> <!--Contenedor del lado izquierdo-->
            <img class="logok" src="../img/logo_karina.png" alt="logo" />
            
            <!--PENDIENTE-->
            <li><a class="CT">Cuenta</a></li>
            <li><a class="SL">Salir</a></li>
            <li><a class="OP">Comentarios</a></li>
        </div>

        <div class="der"> <!--Contenedor del lado derecho-->

            <div class="testDiv">

                <div class="chatBubbles">
                    <p class="text">
                        ¡Hola, soy Giftia! Hoy te ayudaré a encontrar el regalo perfecto. Puedes
                        escribir las preferencias siguiendo este ejemplo: Color,
                        edad, deporte y dinero disponible.
                    </p>
                </div>   
            </div>   

            <div class="chat-input">
                <!--Contenedor para la sección en donde escribe el usuario-->
                <innnput
                    type="text"
                    class="chat"
                    placeholder="Solicita tus regalos aquí..."
                />
                <button
                    type="submit"
                    onclick="enviarMensaje(); MandarAlServidor();"
                    class="pedir_gift"
                    ><ion-icon name="navigate-circle-outline"
                    ></ion-icon>
                </button>
            </div>

        </div>
    </div>

    <script is:inline> //esto significa que será destinado para que se ejecute inline

        let conversation = [];
        
        //se crea una funcion para que el usuario envie un mensaje y se muestre en front
        function enviarMensaje() {
            //se define la función enviarMensaje
            const message = document.querySelector(".chat").value;
            const chat = document.querySelector(".testDiv");
            const newDiv = document.createElement("div"); //se está creando un nuevo div llamado newdiv
            newDiv.className = "msguser"; //se le agrega una clase a newdiv
            newDiv.innerHTML = "<p>" + message + "</p>"; //inserta un nuevo parrafo del usuario a newdiv

            const userMsg = { role: "user", content: message };
            conversation.push(userMsg);

            newDiv.style.color = "black";
            newDiv.style.backgroundColor = "#8094f9";
            newDiv.style.textAlign = "rigth";
            newDiv.style.marginLeft = "auto";
            newDiv.style.borderRadius = "10px"; // Redondear las esquinas
            newDiv.style.padding = "10px"; // Espaciado interior
            newDiv.style.marginBottom = "10px"; // Espaciado entre mensajes
            newDiv.style.maxWidth = "90%"; // Ancho máximo
            newDiv.style.clear = "both"; // Limpiar el float para que se posicione debajo
            newDiv.style.overflow = "auto"; // Para manejar correctamente el float
            newDiv.style.position = "relative"; // Posición relativa para alinear la imagen
            newDiv.style.display = "flex";

            chat.appendChild(newDiv); // se inserta newdiv en chat-input
        }

        //Funcion que espera interaccion del usuario para obtener respuesta (asincrona)
        async function MandarAlServidor() {
            //funcion asincrona
            const user = document.querySelector(".chat").value;
            const response = await fetch(
                "http://localhost:3000/api/chat/send",
                {
                    method: "POST",
                    body: JSON.stringify({ conversationUser: conversation }),
                    headers: {
                        "Content-Type": "application/json",
                    },
                },
            );
            const data = await response.json();
            console.log(data.message.content);
            conversation.push({
                role: "assistant",
                content: data.message.content,
            });
            console.log(conversation);

            //En esta seccion se crea una seccion en donde se haga visible en front la respuesta de la IA
            const chat = document.querySelector(".testDiv");
            const newdiv = document.createElement("div"); //se está creando un nuevo div llamado newdiv
            newdiv.className = "msgbot"; //se le agrega una clase a newdiv
            newdiv.innerHTML = "<p>" + data.message.content + "</p>"; //inserta un nuevo parrafo del bot a newdiv

            newdiv.style.color = "black";
            newdiv.style.backgroundColor = "#a4bafd";
            newdiv.style.textAlign = "left";
            newdiv.style.marginRight = "auto";
            newdiv.style.borderRadius = "10px"; // Redondear las esquinas
            newdiv.style.padding = "10px"; // Espaciado interior
            newdiv.style.marginBottom = "10px"; // Espaciado entre mensajes
            newdiv.style.maxWidth = "90%"; // Ancho máximo
            newdiv.style.clear = "both"; // Limpiar el float para que se posicione debajo
            newdiv.style.overflow = "auto"; // Para manejar correctamente el float
            newdiv.style.position = "relative"; // Posición relativa para alinear la imagen

            

            chat.appendChild(newdiv); // se inserta newdiv en chat-input
        }
    </script>
</Layout>

<style>

    .testDiv {
        height: calc(100% - 110px); /* Ajusta la altura para dejar espacio para los mensajes */
        width: 95%;
        margin-top: 5px;
        margin-left: 10px;
        margin-right: 80px;
        overflow-y: auto; /* Agrega desplazamiento vertical si es necesario */
        scrollbar-color: transparent transparent; /*color de la barra de desplazamiento */
        scrollbar-width: thin; /*ancho de la barra de desplazamiento */
        font-size: 17px;
    }

    .cont-com {
        position: absolute;
        width: 100%; /*ancho*/
        height: 100%; /*altura*/
        background-color: #1a1a4c; /*color de fondo*/
        z-index: 1; /* es para que esté detrás de otros elementos */
        top: 0; /*estará pegado al borde superior*/
    }

    .izq {
        position: absolute;
        width: calc(13% - 40px); /* 13% - 20px de cada lado */
        height: calc(100% - 40px); /* 100% - 20px de arriba y abajo */
        background-color: #a4bafd; /*color de fondo*/
        z-index: 2; /* es para que esté sobre .cont-com */
        top: 20px; /* mueve 20px desde el borde superior */
        left: 20px; /* mueve 20px desde el borde izquierdo */
        border-radius: 10px; /* redondea las esquinas */
        border: 20px solid transparent; /* crea el borde de 20px */
        display: flex;
        flex-direction: column; /* alinea los elementos verticalmente */
        justify-content: flex-start; /* alinea los elementos al principio */
        align-items: center; /* alinea los elementos al centro horizontalmente */
    }

    .der {
        position: absolute;
        width: calc(87% - 40px); /* 87% - 20px de cada lado */
        height: 100%;
        background-color: #1a1a4c;
        z-index: 1; /* Asegura que esté detrás de otros elementos */
        left: calc(13% + 20px); /* Posición desde el borde izquierdo */
        border-radius: 10px; /* redondea las esquinas */
        border: 20px solid transparent; /* crea el borde de 20px */
    }

    .logok {
        width: 40%;
        max-width: 230px;
        min-width: 130px;
        display: block;
        position: relative; /* Cambiamos la posición a relativa */
        margin-top: -10px; /* Agregamos un margen superior */
    }

    .titulo {
        text-align: center;
        margin-top: 10%;
        color: white;
    }

    .CT,
    .SL,
    .OP {
        text-align: center;
        list-style-type: none;
        color: white;
        margin: 10px 0; /* Agregamos un margen entre los elementos */
    }

    .chatBubbles {
        display: flex;
        flex-direction: column;
        background-color: #a4bafd;
        border-radius: 2vh;
        width: 90%;
        padding: 1vh;
        margin-bottom: 10px;
    }

    .text {
        color: black;
    }

    .chat {
        width: 80%;
        padding: 10px; /* Espaciado interior para el borde inferior */
        box-sizing: border-box; /* Incluimos el relleno en el ancho total */
        background-color: #ffffff; /*fondo blanco*/
        border-radius: 10px; /* Redondear esquinas */
        height: 80px;
        margin-left: 10px;
        margin-top: 10px;
    }

    .chat-input {
        display: flex;
        border: 25px solid transparent;
        justify-content: flex-end;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
    }

    .pedir_gift {
        width: 8vh;
        height: 12vh;
        font-size: 6vh;
        background-color: transparent;
        color: #ffffff;
        border: none;
        margin-left: 2vh;
        margin-top: 10px;
    }

    .pedir_gift:hover {
        cursor: pointer;
        color: #909090;
        animation: zoomInOut 1s infinite alternate; /* Puedes ajustar la duración y el número de repeticiones según tu preferencia */
    }

    @keyframes zoomInOut {
        0% {
            transform: scale(1);
        }
        100% {
            transform: scale(1.2);
        }
    }


</style>
