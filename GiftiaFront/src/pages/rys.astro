---
import Layout from "../layouts/Layout.astro";
import Barra from "../components/BarraProgreso/Barra.jsx"
---

<Layout title="Reclamos y Sugerencias">

    <body class="fondo-ryc">
        <main>
    
            <!--Barra de navegacion izquierda-->
            <script
                type="module"
                src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
            ></script>

            <script
                nomodule
                src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"
            ></script>

            <div class="izq">
                <!--Contenedor del lado izquierdo-->
                <img class="logok" src="../img/logo_karina.png" alt="logo" />

                <!--PENDIENTE-->
                <ul>
                    <li><a class="CT" href=""><ion-icon name="person-circle-outline" title="Mi cuenta"></ion-icon></a></li>
                    <li><a class="GT" href="chat"><ion-icon name="gift-outline" title="Chat"></ion-icon></a></li>
                    <li><a class="OP" href="ryc"><ion-icon name="heart-circle-outline" title="Reclamos y Sugerencias"></ion-icon></a></li>
                    <li><a class="MS" href=""><ion-icon name="ellipsis-horizontal-circle-outline" title="Mis Solicitudes"></ion-icon></a></li>
                    <li><a class="SL" id="salir" href=""><ion-icon name="exit-outline" title="Salir"></ion-icon></a></li>
                </ul>
            </div>
            
            <h1 class="titulo-inicial">Reclamos y Sugerencias</h1>
            
            <!--Acordeon de seleccion derecha-->
            <div class="seleccion-izq">
                <div class="accordion">
            
                    <div class="accordion-item" id="primer-item">
                        <div class="accordion-header">Selecciona una de las opciones 
                            <ion-icon name="chevron-down-outline" class="flechita"></ion-icon>
                        </div>
                        <div class="accordion-content" id="r">
                            <button id="btn-reclamo" value="Reclamo">Reclamo</button>
                        </div>
                        <div class="accordion-content" id="s">
                            <button id="btn-sugerencia" value="Sugerencia">Sugerencia</button>
                        </div>
                    </div>
            
                    <div class="accordion-item" id="cont-reclamos">
                        <div class="accordion-header">¿Con qué tiene relación tu reclamo? 
                            <ion-icon name="chevron-down-outline" class="flechita"></ion-icon>
                        </div>
                        <div class="accordion-content">
                            <button value="Uno o varios de los links no funcionan.">Uno o varios de los links no funcionan.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Los precios no se ajustaron a mi presupuesto.">Los precios no se ajustaron a mi presupuesto.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="La página no funciona correctamente.">La página no funciona correctamente.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Los regalos no tienen relación con lo que solicité.">Los regalos no tienen relación con lo que solicité.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Otro.">Otro.</button>
                        </div>
                    </div>
            
                    <div class="accordion-item" id="cont-sugerencias">
                        <div class="accordion-header">¿Con qué tiene relación tu sugerencia? 
                            <ion-icon name="chevron-down-outline" class="flechita"></ion-icon>
                        </div>
                        <div class="accordion-content">
                            <button value="Mejorar el diseño interactivo.">Mejorar el diseño interactivo.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Faltan más variedades de regalos.">Faltan más variedades de regalos.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Los tiempos de espera son muy largos.">Los tiempos de espera son muy largos.</button>
                        </div>
                        <div class="accordion-content">
                            <button value="Otro.">Otro.</button>
                        </div>
                    </div>
                </div>
            
                <div class="cont-texto">
                    <textarea class="texto" name="formulario" id="form" minlength="10" maxlength="600" placeholder="Escríbenos aquí..." required></textarea>
                </div>

                <div>
                    <button class="button-enviar" type="submit">Enviar</button>
                </div>
        
                <span class="error-message"></span>
            </div>

    </body>

    
    <div class="floating-container" id="floating-container">
        <div class="cont-img">
            <img class="logo-negro" src="../../public/logo-negro-trans.png" alt="logo">
        </div>
        <h2>Tu solicitud será resuelta lo antes posible.</h2>
        <h2><br></h2>
        <h2>Puedes ver su estado en "Mis solicitudes".</h2>
        <Barra client:visible/>
    </div>
    </main>

</Layout>

<script>
    // Obtener los elementos del DOM
    const reclamos = document.getElementById("cont-reclamos");
    const sugerencias = document.getElementById("cont-sugerencias");
    const buttonReclamo = document.getElementById("btn-reclamo");
    const buttonSugerencia = document.getElementById("btn-sugerencia");
    const rec = document.getElementById("r");
    const sug = document.getElementById("s");

    // Variables para guardar el estado de rec y sug
    let isRecActive = false;
    let isSugActive = false;

    // Verificar que los elementos existen antes de manipular sus propiedades
    if (reclamos && sugerencias) {
        reclamos.style.display = "none";
        sugerencias.style.display = "none";
    }

    // Añadir event listeners para los botones
    if (buttonReclamo) {
        buttonReclamo.addEventListener("click", () => {
            if (reclamos && sugerencias && rec && sug) {
                reclamos.style.display = "block";
                sugerencias.style.display = "none";
                rec.style.backgroundColor = "rgba(255, 255, 255, 0.699)";
                sug.style.backgroundColor = "rgba(255, 255, 255, 0.299)";
                sug.style.backdropFilter = "blur(10px)";
                isRecActive = true;
                isSugActive = false;
            }
        });
    }

    if (buttonSugerencia) {
        buttonSugerencia.addEventListener("click", () => {
            if (reclamos && sugerencias && rec && sug) {
                sugerencias.style.display = "block";
                reclamos.style.display = "none";
                sug.style.backgroundColor = "rgba(255, 255, 255, 0.699)";
                rec.style.backgroundColor = "rgba(255, 255, 255, 0.299)";
                rec.style.backdropFilter = "blur(10px)";
                isRecActive = false;
                isSugActive = true;
            }
        });
    }

    // Seleccionar los botones y contenedores dentro de .accordion-content
    const seleccion = document.querySelectorAll(".accordion-content button");
    const containers = document.querySelectorAll(".accordion-content");

    // Añadir event listeners a cada botón
    seleccion.forEach(button => {
        button.addEventListener("click", function () {
            containers.forEach(container => {
                container.style.backgroundColor = "rgba(255, 255, 255, 0.299)";
            });
            this.parentElement.style.backgroundColor = "rgba(255, 255, 255, 0.699)";

            // Aplicar el color de fondo correspondiente a rec y sug
            if (rec && sug) {
                rec.style.backgroundColor = isRecActive ? "rgba(255, 255, 255, 0.699)" : "rgba(255, 255, 255, 0.299)";
                sug.style.backgroundColor = isSugActive ? "rgba(255, 255, 255, 0.699)" : "rgba(255, 255, 255, 0.299)";
            }
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded",function(){ //Esto hace que el documento esté pendiente a los eventos
        const acordion = document.querySelectorAll(".accordion-header")
        acordion.forEach(header=>{
            header.addEventListener("click",()=>{
                const acordionItem = header.parentElement as HTMLFormElement
                const acordionContent = acordionItem.querySelectorAll(".accordion-content") as HTMLFormElement
                acordionContent.forEach(content =>{
                    content.style.display = content.style.display === "block"?"none":"block"
                })   
            })
        })
    }) 
</script>

<!--Filtro para las malas palabras en el cuadro de texto-->
<script>
    fetch('/words.json')
        .then(response => response.json())
        .then(data => {
            const forbiddenWords = data.data;
            const button = document.querySelector('.button-enviar') as HTMLFormElement;
            const areatext = document.getElementById('form') as HTMLTextAreaElement;
            const errorMessage = document.querySelector('.error-message') as HTMLElement;

            button.addEventListener('click', function (event) {
                // Detiene el envío del formulario al principio
                event.preventDefault();
                const words = (areatext.value + ' ').split(/\b/);
                let hasForbiddenWord = false;

                for (const word of words) {
                    if (forbiddenWords.includes(word)) {
                        // Si se encuentra una palabra prohibida, muestra un mensaje de error
                        errorMessage.textContent = 'Por favor, evita usar lenguaje ofensivo en tu testimonio.';
                        errorMessage.style.color = 'black';
                        errorMessage.style.display = 'block';
                        errorMessage.style.textAlign = 'center';
                        hasForbiddenWord = true;
                        break;
                    }
                }

                // Si no se encuentra ninguna palabra prohibida, envía el formulario
                if (!hasForbiddenWord) {
                    areatext.closest('form');
                }
            });
        })
        .catch(error => console.error('Error fetching forbidden words:', error));
</script>


<!--Ventana flotante más las alertas  -->
<script>
    document.addEventListener("DOMContentLoaded", function(){
        const boton = document.querySelector(".button-enviar")
        const ventana = document.querySelector(".floating-container") as HTMLFormElement
        const texto = document.querySelector(".texto") as HTMLTextAreaElement
        const botonesPrimerItem = Array.from(document.querySelectorAll(".accordion-item:first-child .accordion-content button"))
        const botonesOtrosItems = Array.from(document.querySelectorAll(".accordion-item:not(:first-child) .accordion-content button"))
        const izq = document.querySelector(".izq") as HTMLFormElement
        const der = document.querySelector(".seleccion-izq") as HTMLFormElement
        const title = document.querySelector(".titulo-inicial") as HTMLFormElement
        let primerItemClickeado = false
        let otrosItemsClickeados = false

        botonesPrimerItem.forEach(boton => {
            boton.addEventListener("click", function () {
                primerItemClickeado = true
            })
        })

        botonesOtrosItems.forEach(boton => {
            boton.addEventListener("click", function () {
                otrosItemsClickeados = true
            })
        })

        boton.addEventListener("click", function () {
            if(texto.value.length >= 10 && primerItemClickeado && otrosItemsClickeados){
                ventana.style.display = "block"
                izq.style.filter = "blur(10px)"
                izq.style.transition = "filter 0.5s ease"
                der.style.filter = "blur(10px)"
                der.style.transition = "filter 0.5s ease"
                title.style.filter = "blur(10px)"
                title.style.transition = "filter 0.5s ease"
            } else {
                ventana.style.display = "none"
                alert("Debe responder todas las casillas antes de enviar, por favor.")
            }
        })
    })
</script>

<!--Backend-Supabase-->
<script>
    import { getItem } from "../functions/localStorage.js";
    let item1 = '';
    let item2 = '';
    let item3 = '';
    const textarea = document.querySelector('.texto') as HTMLTextAreaElement;

    document.querySelectorAll('.accordion-item button').forEach(button => {
    button.addEventListener('click', (event) => {
        const target = event.target as HTMLElement;
        const id = target.closest('.accordion-item')?.id;
        if (id === 'primer-item') {
        item1 = target.innerText;
        } else if (id === 'cont-sugerencias') {
        item2 = target.innerText;
        } else if (id === 'cont-reclamos') {
        item3 = target.innerText;
        }
    });
    });

    document.querySelector('.button-enviar')?.addEventListener('click', async () => { // Agregamos async aquí
        const texto = textarea.value;
        try{
        
        //si el texto tiene menos de 10 caracteres, no se puede enviar
        if(texto.length < 10){
            //..
        }
    } catch (error) {
        console.error("Error:", error);
        console.log(item1, item2, item3, texto);
    }  
    
    

    // Determinar la ruta y el tipo basados en el valor de 'valorItem1'
    let ruta = '';
    let tipo = '';
    if (item1 === 'Sugerencia') {
        ruta = '/api/rys/send/suggest';
        tipo = item2;
    } else if (item1 === 'Reclamo') {
        ruta = '/api/rys/send/complaint';
        tipo = item3;
    }
    const user = getItem('user')

    try {
        const response = await fetch(`http://localhost:3000${ruta}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ category: item1, type: tipo, content: texto, usuario: user.username }),
        });

        if (!response.ok) {
        throw new Error(`An error has occurred: ${response.status}`);
        }

        const data = await response.json(); // Agregamos await aquí
        console.log(data);
    } catch (error) {
        console.error('Error:', error);
    }
    });
</script>

<script is:inline type="module">
    const salir = document.querySelector("#salir");
    salir.addEventListener("click", async () => {
        try {
            const res = await fetch("http://localhost:3000/api/logout", {
                method: "POST"
            });
            const data = await res.json();
            if (data.error === null) {
            localStorage.removeItem('user');
            window.location.href = "/";
            }
        } catch (error) {
            console.log("Ha ocurrido un error: ", error);
        }
    });
</script>

<style>
    body {

        background: -webkit-linear-gradient(180deg, hsla(244, 57%, 49%, 0.801), hsla(225, 96%, 82%, 0.774)),url("../../public/fondo_ryc.jpg");
        background: linear-gradient(180deg, hsla(244, 57%, 49%, 0.756), hsla(225, 96%, 82%, 0.778)),url("../../public/fondo_ryc.jpg"); 
		width: auto;
		height: 100vh;
        background-size: cover;
    }
    
    .izq {
        position: absolute;
        width: calc(13% - 40px); /* 13% - 20px de cada lado */
        height: calc(100% - 40px); /* 100% - 20px de arriba y abajo */
        background-color: #a4bafd; /*color de fondo*/
        z-index: 2; /* es para que esté sobre .cont-com */
        top: 20px; /* mueve 20px desde el borde superior */
        left: 20px; /* mueve 20px desde el borde izquierdo */ 
        border-radius: 10px; /* redondea las esquinas */
        border: 20px solid transparent; /* crea el borde de 20px */
        display: flex;
        flex-direction: column; /* alinea los elementos verticalmente */
        justify-content: flex-start; /* alinea los elementos al principio */
        align-items: center; /* alinea los elementos al centro horizontalmente */
        border: 1px solid #ffb2d5;
    }

    .logok {
        width: 40%;
        max-width: 230px;
        min-width: 130px;
        display: block;
        position: relative; /* Cambiamos la posición a relativa */
        margin-top: 10px; /* Agregamos un margen superior */
    }

    .CT,
    .SL,
    .OP,
    .GT,
    .MS {
        text-align: center;
        list-style-type: none;
        color: white;
        margin: 10px 0; /* Agregamos un margen entre los elementos */
        font-size: 45px;
        color: #000;
    }

    li {
        list-style: none;
    }

    ul {
        margin-top: 30vh;
    }

    .titulo-inicial {
        font-size: 30px;
        position: absolute;
        left: 90vh;
        top: 3vh;
        color: #ffb2d5;
    }

    .flechita {
        position: absolute;
        font-size: 21px;
        left: 94%;  
    }

    .button-enviar {
        display: block; /* Esto convierte el botón en un bloque, permitiendo el uso de margin auto */
        padding: 5px 30px;
        margin: 30px auto; /* Aumenta el margen superior (original era 10px) */
        border-radius: 10px;
        background-color: #ffb2d5;
    }

    .seleccion-izq {
        position: absolute;
        left: 31%; /* Ajusta según el espacio que desees desde la izquierda */
        right: 21%; /* Ajusta según el espacio que desees desde la derecha */
        top: 12vh;
        bottom: 4vh; /* Ajusta este valor según el espacio que desees desde abajo */
        overflow-y: auto; /* Habilita el desplazamiento vertical */
        overflow-x: hidden; /* Evita el desplazamiento horizontal */
        -ms-overflow-style: none; 
        scrollbar-width: none; 
    }

    .accordion {
        border: 1px solid #ffb2d5;
    }

    .accordion-item {
        border-bottom: 1px solid #ffb2d5;
        padding: 10px;
    }

    .accordion-header {
        display: block;
        padding: 5px;
        background-color: #a4bafd;
        cursor: pointer;
    }

    .accordion-content {
        padding: 5px;
        display: none;
        background-color: rgba(255, 255, 255, 0.299); /* Color de fondo blanco con opacidad */
        backdrop-filter: blur(10px); /* Aplica un desenfoque de 10 píxeles */
        border-radius: 10px; /* Esquinas redondeadas */
        margin-bottom: 8px; /* Añade espacio entre las opciones */
        margin-top: 8px; /* Añade espacio en la parte superior para moverlo hacia abajo */
        box-sizing: border-box; /* Asegura que el padding y el borde estén incluidos en el tamaño total */
    }

    .accordion-item input[type="radio"] {
        display: none;
    }

    .accordion-item input[type="radio"]:checked ~ .accordion-content {
        display: block;
    }

    .texto {
        resize: none;
        padding: 10px;
        border: 2px solid #ffb2d5;
        border-radius: 15px;
        width: 130% !important;
        height: 235px !important; 
        overflow-y: auto; /* Habilita el desplazamiento vertical */
        overflow-x: hidden; /* Evita el desplazamiento horizontal */
        -ms-overflow-style: none;  /* IE y Edge */
        scrollbar-width: none;  /* Firefox */
        outline: none;
    }

    .cont-texto {
        margin-top: 3vh;
        display: flex;
    }

    .floating-container {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #a4bafd;
        border: 2px solid #ffb2d5;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0,1);
        padding: 50px;
        border-radius: 10px;
        max-width: 70vh;
        width: calc(100% - 40px);
        text-align: left;
        text-align: center; 
    }

    .cont-img {
        display: flex;
        justify-content: center; /* Centra horizontalmente */
        position: relative;      /* Ya lo tienes, está bien */
    }

    .logo-negro {
        width: 15vh;
    }

</style>

<!--
    
LISTOS ✅

Al pasar con el cursor arriba del panel izquierdo, debe aparecer una texto
flotante que diga para que es cada baton

falta poner que las opciones sean obligatorias de responder (todas)

agregas la flechita hacia abajo en cada uno de los desplegables

agregar las opciones para cuando aprete sugerencia, y que dependiendo de lo que escoja
en la primera opcion aparezca una u otra

agregar un filtro para las palabras malas

ver como quedaria con la imagen de fondo, pero que se mantenga el degrade de colores

integrar el boton de enviar

sacar el cuadro de texto del contenedor izq y agrandarlo para 
darle espacio a las alertas de groserias y la de que respondan todo

Al apretar enviar debe salir otra pagina (me gustaria que fuese una ventana flotante en el medio
y que el fondo se difumine) que diga "tu solicutud será antendidalo más pronto posible", como con 
una barra que se vaya cargando y cuando llegue al final te regrese al chat

PENDIENTES ❎

configurar lo de las alertas (el estilo)

Falta todo el backend con la bd y esas cosas